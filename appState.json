{"EDITOR_STATE":{"allProjectFiles":{"4b43060a-ac4d-45a0-b5c7-d54b2ce8f1de":{"id":"4b43060a-ac4d-45a0-b5c7-d54b2ce8f1de","parent":null,"name":"Hiru_QA","type":"DIRECTORY","isDirectory":true,"children":["ca3a02a1-c13e-4161-8de5-a4335129c57a"],"isRemovable":false,"filePath":"Hiru_QA"},"ca3a02a1-c13e-4161-8de5-a4335129c57a":{"id":"ca3a02a1-c13e-4161-8de5-a4335129c57a","parent":"4b43060a-ac4d-45a0-b5c7-d54b2ce8f1de","name":"lambda.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"Hiru_QA/lambda.js","code":"let AWS = require('aws-sdk');\nlet SL = require('@slappforge/slappforge-sdk');\nconst sqs = new SL.AWS.SQS(AWS);\nexports.handler = function (event, context, callback) {\n\tsqs.receiveMessage({\n\t\tQueueUrl: 'https://sqs.us-east-1.amazonaws.com/480964559519/Hiru_Test1201',\n\t\tAttributeNames: ['All'],\n\t\tMaxNumberOfMessages: '1',\n\t\tVisibilityTimeout: '30',\n\t\tWaitTimeSeconds: '0'\n\t}, function (receivedMessages) {\n\t\treceivedMessages.forEach(message => {\n\t\t\t// your logic to access each message through out the loop. Each message is available under variable message \n\t\t\t// within this block\n\t\t})\n\t}, function (error) {\n\t\t// implement error handling logic here\n\t});\n\n\tsqs.receiveMessage({\n\t\tQueueUrl: 'https://sqs.us-east-1.amazonaws.com/480964559519/Hiru_Test1201',\n\t\tAttributeNames: ['SenderId'],\n\t\tMaxNumberOfMessages: '4',\n\t\tVisibilityTimeout: '3000',\n\t\tWaitTimeSeconds: '5',\n\t\tMessageAttributeNames: ['sample']\n\t}, function (receivedMessages) {\n\t\treceivedMessages.forEach(message => {\n\t\t\t// your logic to access each message through out the loop. Each message is available under variable message \n\t\t\t// within this block\n\t\t})\n\t}, function (error) {\n\t\t// implement error handling logic here\n\t});\n\n\tsqs.sendMessage({\n\t\tMessageBody: 'test',\n\t\tQueueUrl: 'https://sqs.us-east-1.amazonaws.com/480964559519/new_hiru',\n\t\tDelaySeconds: '0',\n\t\tMessageAttributes: {}\n\t}, function (data) {\n\t\t// your logic (logging etc) to handle successful message delivery, should be here\n\t}, function (error) {\n\t\t// your logic (logging etc) to handle failures, should be here\n\t});\n\n\n\t//test\n\t//callback(null,'Successfully executed');\n\tcallback(null, 'Successfully executed test');\n}","triggers":[{"resourceName":"apigusEast1APIANYUdataget","config":{}}],"version":16}},"rootNode":"4b43060a-ac4d-45a0-b5c7-d54b2ce8f1de","openFiles":["ca3a02a1-c13e-4161-8de5-a4335129c57a"],"currentFileId":"ca3a02a1-c13e-4161-8de5-a4335129c57a","resources":{"apigusEast1APIANYUdataget":{"name":"apigusEast1APIANYUdataget","type":"API_GATEWAY","config":{"selectedRegion":"us-east-1","apiMode":1,"apiName":"API_ANYU","apiId":"5zf4754a61","endpointType":"EDGE","rootResourceId":"mko5xvn80d","existingResources":{"/":"mko5xvn80d","/data":"yjdvgj"},"resourceMode":1,"resourcePath":"/data","resourceName":"data","resourceId":"yjdvgj","restMethod":"GET","proxyIntegration":false,"enableCORS":false,"stageMode":1,"stageName":"Test","stageDeploymentId":"yqo943"},"globallyEditable":true},"sqsusEast1HiruTest1201":{"name":"sqsusEast1HiruTest1201","type":"SQS","config":{"mode":1,"existing":true,"name":"Hiru_Test1201","url":"https://sqs.us-east-1.amazonaws.com/480964559519/Hiru_Test1201","selectedRegion":"us-east-1","deliveryDelay":"0","deliveryDelayUnit":"seconds","queueType":"standardQueue","defaultVisibilityTimeout":"30","defaultVisibilityTimeoutUnit":"seconds","messageRetentionPeriodUnit":"seconds","maximumMessageSize":256,"receiveMessageWaitTime":"0","queueARN":"arn:aws:sqs:us-east-1:480964559519:Hiru_Test1201","operation":0},"globallyEditable":true},"sqsusEast1newhiru":{"name":"sqsusEast1newhiru","type":"SQS","config":{"mode":0,"existing":false,"name":"new_hiru","url":"https://sqs.us-east-1.amazonaws.com/480964559519/new_hiru","selectedRegion":"us-east-1","deliveryDelay":0,"deliveryDelayUnit":"seconds","useRedrivePolicy":true,"useSSE":false,"kmsCustomerMasterKey":"default","accountId":"480964559519","dataKeyReusePeriod":5,"queueType":"standardQueue","defaultVisibilityTimeout":30,"defaultVisibilityTimeoutUnit":"seconds","messageRetentionPeriod":4,"messageRetentionPeriodUnit":"days","maximumMessageSize":256,"receiveMessageWaitTime":0,"deadLetterQueueName":"test","maximumReceives":"1","contentBasedDeduplication":false,"operation":1},"globallyEditable":true,"existing":false}},"packageJSON":{"dependencies":{"aws-sdk":{"name":"aws-sdk","version":"2.176.0","notRemovable":true},"slappforge-sdk":{"name":"@slappforge/slappforge-sdk","version":"0.0.3","notRemovable":true,"types":"\n                    declare class RDSQueryParams {\n    instanceIdentifier: string;\n    query: string;\n    inserts: Array<any>\n}\n\ndeclare namespace SL.AWS {\n    class RDS {\n        query(params: RDSQueryParams, callback: Function, connection: any): void;\n\n        beginTransaction(params: any, callback: Function): void;\n    }\n\n    class SQS {\n        receiveAndDeleteMessages(params: any, filteringCallBack: Function, deleteCallBack: Function, errorCallBack: Function): void;\n    }\n}\n"},"SL":"1.0.0"}},"lambdaId":"ca3a02a1-c13e-4161-8de5-a4335129c57a","additionalFiles":[]},"PROJECT_META":{"projectName":"Hiru_QA","projectDescription":"","projectVersion":"1.0.0","projectRegion":"us-east-1","repoName":"Hiru_QA","repoUrl":"https://github.com/hirudinee/Hiru_QA","lastSave":1519206274387}}